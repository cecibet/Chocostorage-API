// <auto-generated />
using System;
using ChocoStorageAPI.DBContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChocoStorageAPI.Migrations
{
    [DbContext(typeof(ProductsInfoContext))]
    [Migration("20220622231658_ProductsMigracionInicial3")]
    partial class ProductsMigracionInicial3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("ChocoStorageAPI.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChocolateType")
                        .HasMaxLength(50)
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductType")
                        .HasMaxLength(50)
                        .HasColumnType("INTEGER");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("REAL");

                    b.Property<int>("Weight")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            ChocolateType = 1,
                            ProductType = 0,
                            Stock = 50,
                            UnitPrice = 300f,
                            Weight = 70
                        },
                        new
                        {
                            ProductId = 2,
                            ChocolateType = 1,
                            ProductType = 0,
                            Stock = 20,
                            UnitPrice = 500f,
                            Weight = 110
                        },
                        new
                        {
                            ProductId = 3,
                            ChocolateType = 0,
                            ProductType = 0,
                            Stock = 20,
                            UnitPrice = 300f,
                            Weight = 70
                        },
                        new
                        {
                            ProductId = 4,
                            ChocolateType = 0,
                            ProductType = 0,
                            Stock = 20,
                            UnitPrice = 500f,
                            Weight = 110
                        },
                        new
                        {
                            ProductId = 5,
                            ChocolateType = 3,
                            ProductType = 1,
                            Stock = 4,
                            UnitPrice = 400f,
                            Weight = 120
                        },
                        new
                        {
                            ProductId = 6,
                            ChocolateType = 3,
                            ProductType = 1,
                            Stock = 20,
                            UnitPrice = 600f,
                            Weight = 180
                        },
                        new
                        {
                            ProductId = 7,
                            ChocolateType = 3,
                            ProductType = 1,
                            Stock = 20,
                            UnitPrice = 750f,
                            Weight = 300
                        },
                        new
                        {
                            ProductId = 8,
                            ChocolateType = 2,
                            ProductType = 1,
                            Stock = 4,
                            UnitPrice = 400f,
                            Weight = 120
                        },
                        new
                        {
                            ProductId = 9,
                            ChocolateType = 2,
                            ProductType = 1,
                            Stock = 20,
                            UnitPrice = 600f,
                            Weight = 180
                        },
                        new
                        {
                            ProductId = 10,
                            ChocolateType = 2,
                            ProductType = 1,
                            Stock = 20,
                            UnitPrice = 750f,
                            Weight = 300
                        },
                        new
                        {
                            ProductId = 11,
                            ChocolateType = 4,
                            ProductType = 1,
                            Stock = 4,
                            UnitPrice = 400f,
                            Weight = 120
                        },
                        new
                        {
                            ProductId = 12,
                            ChocolateType = 4,
                            ProductType = 1,
                            Stock = 20,
                            UnitPrice = 600f,
                            Weight = 180
                        },
                        new
                        {
                            ProductId = 13,
                            ChocolateType = 4,
                            ProductType = 1,
                            Stock = 20,
                            UnitPrice = 750f,
                            Weight = 300
                        },
                        new
                        {
                            ProductId = 14,
                            ChocolateType = 1,
                            ProductType = 2,
                            Stock = 10,
                            UnitPrice = 350f,
                            Weight = 70
                        },
                        new
                        {
                            ProductId = 15,
                            ChocolateType = 1,
                            ProductType = 2,
                            Stock = 20,
                            UnitPrice = 500f,
                            Weight = 160
                        },
                        new
                        {
                            ProductId = 16,
                            ChocolateType = 0,
                            ProductType = 2,
                            Stock = 20,
                            UnitPrice = 350f,
                            Weight = 70
                        },
                        new
                        {
                            ProductId = 17,
                            ChocolateType = 0,
                            ProductType = 2,
                            Stock = 2,
                            UnitPrice = 500f,
                            Weight = 160
                        });
                });

            modelBuilder.Entity("ChocoStorageAPI.Entities.SellOrder", b =>
                {
                    b.Property<int>("SellId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ShippingType")
                        .HasColumnType("INTEGER");

                    b.Property<float>("TotalCost")
                        .HasColumnType("REAL");

                    b.HasKey("SellId");

                    b.HasIndex("ProductId");

                    b.ToTable("Sells");

                    b.HasData(
                        new
                        {
                            SellId = 1,
                            Date = new DateTime(2022, 6, 22, 20, 16, 57, 948, DateTimeKind.Local).AddTicks(9053),
                            ProductId = 2,
                            Quantity = 5,
                            ShippingType = 0,
                            TotalCost = 2500f
                        },
                        new
                        {
                            SellId = 2,
                            Date = new DateTime(2022, 6, 22, 20, 16, 57, 948, DateTimeKind.Local).AddTicks(9065),
                            ProductId = 3,
                            Quantity = 5,
                            ShippingType = 1,
                            TotalCost = 3000f
                        });
                });

            modelBuilder.Entity("ChocoStorageAPI.Entities.SellOrder", b =>
                {
                    b.HasOne("ChocoStorageAPI.Entities.Product", "ProductInOrder")
                        .WithMany("SellOrders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductInOrder");
                });

            modelBuilder.Entity("ChocoStorageAPI.Entities.Product", b =>
                {
                    b.Navigation("SellOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
